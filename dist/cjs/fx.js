/*! @ryanmorr/fx v0.1.0 | https://github.com/ryanmorr/fx */
"use strict";const e={},t=/^#?(\w{2})(\w{2})(\w{2})$/,n=/^#?(\w{1})(\w{1})(\w{1})$/,r=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,o={linear:e=>e,"ease-in":e=>Math.pow(e,1.675),"ease-out":e=>1-Math.pow(1-e,1.675),"ease-in-out":e=>.5*(Math.sin((e-.5)*Math.PI)+1)};function s(e){return"number"==typeof e?[e,"px"]:/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(e)}function a(o){if(o in e)return e[o];let s,a=o.match(t);return a&&4===a.length?(s=[parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],16)],e[o]=s,s):(a=o.match(r),a&&4===a.length?(s=[parseInt(a[1],10),parseInt(a[2],10),parseInt(a[3],10)],e[o]=s,s):(a=o.match(n),a&&4===a.length?(s=[parseInt(a[1]+a[1],16),parseInt(a[2]+a[2],16),parseInt(a[3]+a[3],16)],e[o]=s,s):void 0))}function l(e,t,n,r){switch(t){case"opacity":e.style[t]=n;break;case"scrollTop":case"scrollLeft":e[t]=n;break;default:t in e.style&&(t.toLowerCase().includes("color")?e.style[t]=`rgb(${Math.floor(n[0])}, ${Math.floor(n[1])}, ${Math.floor(n[2])})`:e.style[t]=n+r)}}module.exports=function(e,t,n=1e3,r="linear"){return e="string"==typeof e?document.querySelector(e):e,new Promise((c=>{let i;const u=o[r],[p,m,f]=function(e,t){const n={},r={},o={};for(const l in t){const c=t[l];let[i,u]=Array.isArray(c)?c:[null,c];if(l.toLowerCase().includes("color"))i=null==i?getComputedStyle(e)[l]:i,n[l]=a(i),r[l]=a(u);else if("scrollTop"===l||"scrollLeft"===l)i=null==i?e[l]:i,n[l]=i,r[l]=u;else{const[t,a]=s(u);i=null==i?parseFloat(getComputedStyle(e)[l])||0:s(i)[0],n[l]=i,r[l]=t,o[l]=a}}return[n,r,o]}(e,t),h=t=>{i||(i=t);const r=Math.min(t-i,n)/n;for(const t in p){const n=p[t],o=m[t],s=f[t];if(Array.isArray(n))for(let a=0,c=n.length;a<c;a++){const c=n[a]+(o[a]-n[a])*u(r);l(e,t,c,s)}else{const a=n+(o-n)*u(r);l(e,t,a,s)}}r<1?requestAnimationFrame(h):c()};requestAnimationFrame(h)}))};
