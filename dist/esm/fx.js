/*! @ryanmorr/fx v0.1.0 | https://github.com/ryanmorr/fx */
const e={},t=/^#?(\w{2})(\w{2})(\w{2})$/,n=/^#?(\w{1})(\w{1})(\w{1})$/,r=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,o={duration:1e3,easing:"linear"},s={linear:e=>e,"ease-in":e=>Math.pow(e,1.675),"ease-out":e=>1-Math.pow(1-e,1.675),"ease-in-out":e=>.5*(Math.sin((e-.5)*Math.PI)+1)};function a(e,t,n,r){return t+(n-t)*e(r)}function l(e){return"number"==typeof e?[e,"px"]:/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(e)}function c(o){if(o in e)return e[o];let s,a=o.match(t);return a&&4===a.length?(s=[parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],16)],e[o]=s,s):(a=o.match(r),a&&4===a.length?(s=[parseInt(a[1],10),parseInt(a[2],10),parseInt(a[3],10)],e[o]=s,s):(a=o.match(n),a&&4===a.length?(s=[parseInt(a[1]+a[1],16),parseInt(a[2]+a[2],16),parseInt(a[3]+a[3],16)],e[o]=s,s):void 0))}function i(e,t,n,r){switch(t){case"opacity":e.style[t]=n;break;case"scrollTop":case"scrollLeft":e[t]=n;break;default:t in e.style&&(t.toLowerCase().includes("color")?e.style[t]=`rgb(${Math.floor(n[0])}, ${Math.floor(n[1])}, ${Math.floor(n[2])})`:e.style[t]=n+r)}}function u(e,t){const n="string"==typeof e?document.querySelector(e):e,{duration:r,easing:u}=Object.assign(o,t);return new Promise((e=>{let o;const p=s[u],[m,f,d]=function(e,t){const n={},r={},o={};for(const s in t){const a=t[s];let[i,u]=Array.isArray(a)?a:[null,a];if(s.toLowerCase().includes("color"))i=null==i?getComputedStyle(e)[s]:i,n[s]=c(i),r[s]=c(u);else if("scrollTop"===s||"scrollLeft"===s)i=null==i?e[s]:i,n[s]=i,r[s]=u;else{const[t,a]=l(u);i=null==i?parseFloat(getComputedStyle(e)[s])||0:l(i)[0],n[s]=i,r[s]=t,o[s]=a}}return[n,r,o]}(n,t),h=t=>{o||(o=t);const s=Math.min(t-o,r)/r;for(const e in m){const t=m[e],r=f[e],o=d[e],l=Array.isArray(t)?t.map(((e,t)=>a(p,e,r[t],s))):a(p,t,r,s);i(n,e,l,o)}s<1?requestAnimationFrame(h):e()};requestAnimationFrame(h)}))}export{u as default};
